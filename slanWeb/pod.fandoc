**************************************************************************
** title:      slanweb
** author:     chunquedong
** created:    2010-9-23
** copyright:  Copyright (c) 2010, chunquedong
** license:    Licensed under the Academic Free License version 3.0
**************************************************************************

Overview [#overview]
********************

Route [#route]
=============

The uri 'http://localhost:8080/action/Welcome/print/115?i=123&m=bac'
will route to 'action'(dir) and 'Welcome'(class), and call 'printInfo'(method)
with 'i=123,m=bac'(named params)

Most of the time, you should just use 'http://localhost:8080/Welcome/print',
It will call Welcome's print method.

Html Template [#htmlTemplate]
=============
The template code like this:

   <html>
    <head>
      <title>Welcome</title>
    </head>
    <body>
     <h1>Welcome @name !</h1>
     #for(i := 0; i < 3; i++)
     #{
        <h4>abc${i}line</h4>
     #}
    </body>
  </html>

Fantom code start with '#'(escape '#' with '##').
Other code will be output directly.
In fact the string be compile to fantom string, so we can embedded '$ interpolation'

Pass Arguments [#passArguments]
-----------
The 'req.stash[]' be used to pass args from controller to view.
we get the args in template code by '@name'.

Render [#render]
-----------
Call the 'SlanWeblet#render' to render the template. Default template is the action name.
If res is not commited and has non-null retruning value, the result will be serialized and render as plan text.


Run [#run]
=============
SlanRouteMod is std WebMod. But need init SlanApp before new SlanRouteMod
  const class RootMod : PipelineMod {
    new make(Uri? path := null) : super(|PipelineMod pp| {
      SlanApp.init(this.typeof.pod.name)
      pp.steps = [ SlanRouteMod() ]
      pp.after = [ SlanLogMod(logDir) ]
    }){}
  }

support restart by draft:
  fan idraft -appHome file:/Users/yangjiandong/workspace/code/slan/slanDemo/ slanDemo::RootMod

Deploy [#deploy]
==============

Deploy to cloud server as std servlet container.
see: `https://bitbucket.org/chunquedong/fanlet` and slanDemo/build.fan#dist

